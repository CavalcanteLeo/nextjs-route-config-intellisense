name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  manual-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Update version
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          echo "Updated package.json to version ${{ github.event.inputs.version }}"

      - name: Package extension
        run: |
          npm install -g @vscode/vsce
          vsce package

      - name: Create Git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json package-lock.json
          git commit -m "chore(release): ${{ github.event.inputs.version }}"
          git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"
          git push origin main
          git push origin "v${{ github.event.inputs.version }}"

      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          configuration: '.github/changelog-config.json'
          toTag: 'v${{ github.event.inputs.version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v${{ github.event.inputs.version }}'
          release_name: 'Release v${{ github.event.inputs.version }}'
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload extension to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: '*.vsix'
          asset_name: 'nextjs-route-config-intellisense-${{ github.event.inputs.version }}.vsix'
          asset_content_type: application/zip

      - name: Publish to VS Code Marketplace
        run: |
          npm install -g @vscode/vsce
          vsce publish --pat ${{ secrets.VSCE_PAT }}
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Publish to Open VSX Registry
        run: |
          npm install -g ovsx
          ovsx publish *.vsix --pat ${{ secrets.OVSX_PAT }}
        env:
          OVSX_PAT: ${{ secrets.OVSX_PAT }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: manual-release
          name: codecov-manual-release
